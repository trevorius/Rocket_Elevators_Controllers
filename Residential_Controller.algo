SET BUILDING to INSTANTIATE BuildingSpecs WITH 10 AND 1 AND 2
SET COLUMN to INSTANTIATE Column WITH BUILDING Floors AND BUILDING Elevators


DEFINE BuildingSpecs USING floors AND collumns AND elevators
    Floors : floors
    Collumns : collumns
    Elevators : elevators
ENDDEFINE

DEFINE Column USING floors AND elevators
    CallButtons : SET to empty list
    Elevators : SET to empty list

    SEQUENCE create_callButtons USING floors
        FOR every floor
            SET callButtonUp to INSTANTIATE callButton WITH floor AND Up
            SET callButtonDown to INSTANTIATE callButton WITH floor AND Down
            ADD callButtonUP to callButtons
            ADD callButtonDown to callButtons
        ENDFOR
    ENDSEQUENCE
    SEQUENCE create_elevators USING elevators
        FOR every elevator
            SET Elevator to INSTANTIATE Elevator WITH elevator AND O AND floors 
        ENDFOR
    ENDSEQUENCE
ENDDEFINE      

DEFINE CallButton USING floor AND direction
    Number : floor
    Direction : direction
    IsPressed : false
ENDDEFINE

DEFINE Elevator USING id AND Location AND floors
    ID: id
    FloorNumber : location
    Movement : SET to false 'can be : up, down, or false'
    FloorRequestButtons : SET to an empty list 
    DestinationFloor : null
    Distance : null
    Doors: SET to Object

    SEQUENCE create_FloorRequestButtons USING floors
        FOR every floor
            SET FloorRequestButton to INSTANTIATE FloorRequestButton WITH floor
            ADD FloorRequestButton to FloorRequestButtons
        ENDFOR
    ENDSEQUENCE
    SEQUENCE create_Doors 
        SET doors to INSTANTIATE Doors
    ENDSEQUENCE

ENDDEFINE

DEFINE FloorRequestButton USING floor
    Number: floor
    IsPressed :false
ENDDEFINE


DEFINE Doors 
    Open : false
    OpenTime: 5sec
    SafeToClose : true
    PassengerDetector : false
ENDDEFINE

SET calls to empty list
SET requests to empty list


'sort SEQUENCE EDX week 3'
'compare values array'
SEQUENCE IS_IN USING value AND list     
    FOR every element of list
        IF value is SAME AS element
            THEN RETURN true
        ELSE RETURN false
        ENDIF
    ENDFOR
ENDSEQUENCE
    

'magnitude is the unsigned value of the variable'
SEQUENCE magnitude USING number     
    IF number SMALLER THAN 0
        THEN RETURN number MULTIPLIES -1
    ELSE RETURN number
    ENDIF
ENDSEQUENCE

WHEN a Callbutton is pressed
    CALL CallElevatorCheck WITH COLUMN

WHEN a FloorRequestButton is pressed
    CALL usersDestination With COLUMN


SEQUENCE CallElevatorCheck USING column
    
    CALL pressButton WITH column CallButtons     
    FOR every CallButton of column CallButtons 
        IF CallButton isPressed SAME AS true 
            THEN ADD callButton to calls 
        ENDIF
    ENDFOR

    FOR every callElement of calls 

        FOR every elevator in collumn Elevators

            CAll (magnitude WITH Elevator FloorNumber) RETURNING magnitude_OF_FloorNumber
            CALL (magnitude WITH button Number) RETURNING magitude_OF_buttonNumber
            CALL (magnitude WITH (Elevator FloorNumber MINUS callButton Number)) RETURNING distanceToCall
            CALL (magnitude WITH (Elevator FloorNumber MINUS Elevator DestinationFloor)) RETURNING distanceToDestination

            IF  'IF an elevator's travel takes it through button's floor'
                magnitude_OF_FloorNumber GREATER THAN magitude_OF_buttonNumber AND Elevator Movement SAME_AS button Direction SAME AS down
                OR maagnitude_OF_FloorNumber GREATER THAN magitude_OF_buttonNumber  AND ElevatorMovement SAME AS button Direction SAME AS up
                AND distanceToCall SMALLER THAN distanceToDestination
                    THEN go to next callElement 'elevators moveSEQUENCE will make it stop at the called floor'
            ELSE

                CALL findClosestElevator WITH callElement AND column
                
                FOR every Elevator in column Elevators

                    CALL (magnitude WITH (Elevator FloorNumber MINUS callButton Number)) RETURNING distanceToCall
                    CALL (magnitude WITH (Elevator FloorNumber MINUS Elevator DestinationFloor) RETURNING distanceToDestination

                    CASE 'elevator travelling towards call'
                        Elevator FloorNumber GREATER THAN callElement Number AND Elevator Movement SAME AS callElement Direction SAME AS down
                        OR ElevatorFloorNumber SMALLER THAN callButton Number AND ElevatorMovement SAME AS callElement Direction SAME AS up
                        IF 'IF closest elevator's destination is closer than this call'
                            distanceToCall GREATER THAN distanceToDestination
                            
                            THEN SET Elevator DestinationFloor to callElement Number
                        ENDIF
                    
                    CASE Elevator movement is false
                            SET Elevator DestinationFloor to callElement Number
                            call moveElevator WITH Elevator
                                
                    CASE Elevator FloorNumber GREATER THAN callElement Number AND Elevator Movement IS up 
                        OR Elevator FloorNumber SMALLER THAN callElement Number AND Elevator Movement IS down
                        go to next Elevator
                            
                    ENDCASE
                ENDFOR
            ENDIF
        ENDFOR        
    ENDFOR
    CALL usersDestination WITH column

               

ENDSEQUENCE

SEQUENCE usersDestination USING column
    CALL pressButton WITH FloorRequestButtons
    FOR every Column Elevator    
        FOR every Column Elevator FloorRequestButton
            IF Column Elevator FloorRequestButton IsPressed IS true                
                ADD Column Elevator FloorRequestButton Number to requests 
                SORT requests ascending
                CASE Column Elevator Movement IS up
                    SET Column Elevator DestinationFloor to  last of requests
                CASE Column Elevator Movement IS down
                    SET Column Elevator DestinationFloor to first of requests                   
                CASE Column Elevator Movement IS false

                    CALL (magnitude WITH (Column Elevator FloorNumber MINUS first of requests)) RETURNING lowest
                    CALL (magnitude WITH (last of requests MINUS Column Elevator FloorNumber)) RETURNING highest

                    CASE lowest GREATER THAN highest
                        SET Column Elevator DestinationFloor to first of requests
                    CASE lowest SMALLER THAN highest
                        SET Column Elevator DestinationFloor to last of requests
                    CASE lowest SAME AS highest
                        SET dColumn Elevator DestinationFloor to first of requests
                    ENDCASE
                ENDCASE
            ENDIF
        ENDFOR
        CALL moveElevator USING  Column Elevator
    ENDFOR
ENDSEQUENCE

SEQUENCE findClosestElevator USING calledTo AND Column
    
    FOR every  Column Elevator
        CALL (magnitude WITH (Elevator floorNumber MINUS calledTo) ) RETURNING Elevator distance
    ENDFOR
    SORT Column Elevators by ascending ELevator distance
    SET closestElevator to first elevator of Column Elevators
ENDSEQUENCE

SEQUENCE pressButton USING buttons 
    FOR all button elements of buttons
        IF button is pressed
            SET button IsPressed  to true
        ENDIF 
    ENDFOR
ENDSEQUENCE

SEQUENCE moveElevator USING Column Elevator
    
    WHILE elevator FloorNumber  IS NOT elevator DestinationFloor
        IF elevator destinationFloor  GREATER THAN elevator floorNumber 
            THEN SET elevator Movement to up
            INCREMENT floorNumber of elevator by +1
            
        ELSE 
            SET elevator Movement to down
            INCREMENT floorNumber of elevator by -1
        ENDIF

        CALL (IS_IN WITH Column Elevator FloorNumber AND calls callElement Numbers) RETURNING FloorNumber_IS_IN_calls
        CALL (IS_IN WITH Column Elevator FloorNumber AND requests) RETURNING FloorNumber_IS_IN_requests

        IF  CloorNumber_IS_IN_calls AND Column Elevator Movement SAME AS callElement Direction
            OR FloorNumber_IS_IN_requests 
                THEN 
                    CALL DoorsAction USING Column Elevator
                    SET callButtons (WITH Number SAME AS Column Elevator floorNumber) IsPressed to false
                    SET FloorRequestButton (WITH Number SAME AS Column Elevator floorNumber) IsPressed to false
                    REMOVE element WITH number SAME AS Column Elevator FloorNumber FROM requests AND calls
        ENDIF
    CASE calls IS NOT empty
        SET Column Elevator DestinationFloor to first callElement Number
    CASE requests IS NOT empty
        SET Column Elevator DestinationFloor to first request
    ENDCASE
    ENDWHILE
        
    IF elevator FloorNumber SAME AS destinationFloor
        THEN SET elevator Movement to false
            CALL DoorsAction USING Column elevator
            SET callButtons WITH Number SAME AS destinationFloor IsPressed to false
    
    ENDIF
    SET elevator destinationFloor to null
ENDSEQUENCE

SEQUENCE doorsAction USING elevator
    SET elevator Doors open to true
    wait openTime
   
    SET elevator Doors safeToClose to false
    WHILE elevator Doors safeToClose is false
        CALL checkSafeToClose USING elevator Doors
            IF elevator Doors safeToClose is true
                THEN close elevator Doors
                SET elevator Doors open to false
            ENDIF
    ENDWHILE
    
ENDSEQUENCE

SEQUENCE checkSafeToClose USING doors
    IF doors PassengerDetector is false 'not activated'
        SET doors SafeToClose to true
ENDSEQUENCE
