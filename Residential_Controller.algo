"code added in orange comments was added after the video for additional requirements"


SET BUILDING to INSTANTIATE BuildingSpecs WITH 10 AND 1 AND 2 AND "AND 8 AND 18"
SET COLLUMN to INSTANTIATE Collumn WITH BUILDING Floors AND BUILDING Elevators
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
TEST SECTION

    SET SelectedElevator to null

    Scenario 1:
        'Elevator A is Idle at floor 2'
        SET floorNumber AND Movement  of elevator WITH ID:1 TO 2 AND false
        'Elevator B is Idle at floor 6'
        SET floorNumber AND Movement of elevator WITH ID:2 TO 6 AND false
        'Someone is on floor 3 and wants to go to the 7th floor. '
        SET IsPressed  of callButtonUP WITH number: 3 to true
        CALL CallElevatorCheck WITH COLLUMN
        SET IsPressed of FloorRequestButton With Number : 7 to true
        CALL usersDestination WITH COLLUMN
        'Elevator A is expected to be sent.
        DISPLAY SelectedElevator


    Scenario 2:
        'Elevator A is Idle at floor 10 
        SET floorNumber AND Movement of elevator WITH ID:1 TO 10 AND false
        'Elevator B is idle at floor 3
        SET floorNumber AND Movement of elevator WITH ID:2 TO 3 AND false
        'Someone is on the 1st floor and requests the 6th floor. 
        SET IsPressed  of callButtonUP WITH number: 1 to true
        CALL CallElevatorCheck WITH COLLUMN
        SET IsPressed of FloorRequestButton With Number : 6 to true
        CALL usersDestination WITH COLLUMN
        'Elevator B should be sent. 
        DISPLAY SelectedElevator


        '2 minutes later, someone else is on the 3rd floor and requests the 5th floor. 
        SET IsPressed  of callButtonUP WITH number: 3 to true
        CALL CallElevatorCheck WITH COLLUMN
        SET IsPressed of FloorRequestButton With Number : 5 to true
        CALL usersDestination WITH COLLUMN
        'Elevator B should be sent.
        DISPLAY SelectedElevator


        'Finally, a third person is at floor 9 and wants to go down to the 2nd floor. 
        SET IsPressed  of callButtonUP WITH number: 9 to true
        CALL CallElevatorCheck WITH COLLUMN
        SET IsPressed of FloorRequestButton With Number : 2 to true
        CALL usersDestination WITH COLLUMN

        'Elevator A should be sent.
        DISPLAY SelectedElevator

    Scenario 3:
        'Elevator A is Idle at floor 10 
        SET floorNumber AND Movement  of elevator WITH ID:1 TO 10 AND false
        'Elevator B is Moving from floor 3 to floor 6
        SET floorNumber AND Movement AND DestinationFloor of elevator WITH ID:1 TO 3 AND up AND 6
        'Someone is on floor 3 and requests the 2nd floor. 
        SET IsPressed  of callButtonUP WITH number: 3 to true
        CALL CallElevatorCheck WITH COLLUMN
        SET IsPressed of FloorRequestButton With Number : 2 to true
        CALL usersDestination WITH COLLUMN
        'Elevator A should be sent. 
        DISPLAY SelectedElevator

        '5 minutes later, someone else is on the 10th floor and wants to go to the 3rd. 
        SET IsPressed  of callButtonUP WITH number: 10 to true
        CALL CallElevatorCheck WITH COLLUMN
        SET IsPressed of FloorRequestButton With Number : 3 to true
        CALL usersDestination WITH COLLUMN

        'Elevator B should be sent.
        DISPLAY SelectedElevator



DEFINE BuildingSpecs USING floors AND collumns AND elevators "AND _leavingTime AND _arrivingTime"
    Floors : floors
    Collumns : collumns
    Elevators : elevators
    ALARM : false
 "  leavingTime : _leavingTime 
    arrivingTime : _arrivingTime
 "

 "   SEQUENCE timeCheck USING leavingTime AND arrivingTime AND time
        IF time IS GRETATER THAN (arrivingTime - 1hour) OR SMALLER THAN (arrivingTime + 1hour)   
            RETURN 1
        ENDIF
    ENDSEQUENCE
 "
ENDDEFINE

DEFINE Collumn USING floors AND elevators
    CallButtons : SET to empty list
    Elevators : SET to empty list
    numberOfElevators: elevators
    floors: floors
    Online : true
    Online_elevators : SET to empty list

    SEQUENCE create_callButtons USING floors
        SET counter to 0
        WHILE counter LESS THAN floors
            SET callButtonUp to INSTANTIATE callButton WITH floor AND Up
            SET callButtonDown to INSTANTIATE callButton WITH floor AND Down
            ADD callButtonUP to callButtons
            ADD callButtonDown to callButtons
        ENDWHILE
    ENDSEQUENCE
    SEQUENCE create_elevators USING elevators
        
        SET counter to 1
        WHILE counter LESSTHAN OR EQUALTO elevators
            SET Elevator to INSTANTIATE Elevator WITH ecounter AND O AND floors 
            increment counter by +1
        ENDFOR
    ENDSEQUENCE

    CALL create_callButtons WITH floors
    CALL create_elevators WITH elevators



ENDDEFINE      

DEFINE CallButton USING floor AND direction
    Number : floor
    Direction : direction
    IsPressed : false
ENDDEFINE

DEFINE Elevator USING id AND Location AND floors

    ID: id
    FloorNumber : location
    Movement : SET to false 'can be : up, down, or false'
    FloorRequestButtons : SET to an empty list 
    DestinationFloor : null
    Distance : null
    Doors: SET to Object
    Timer : 0
    Online: true

 "   MAXLOAD : 10000 Lb
    LOAD : weightOfLoad
 "

    SEQUENCE create_FloorRequestButtons USING floors
        FOR every floor
            SET FloorRequestButton to INSTANTIATE FloorRequestButton WITH floor
            ADD FloorRequestButton to FloorRequestButtons
        ENDFOR
    ENDSEQUENCE
    SEQUENCE create_Doors 
        SET doors to INSTANTIATE Doors
    ENDSEQUENCE

 "   SEQUENCE isElevatorFull USING MAXLOAD
    IF LOAD SMALLER THAN MAXLOAD THEN  
        RETURN false
    ELSE RETURN true
    ENDIF
    ENDSEQUENCE
 "

    CALL create_FloorRequestButtons WITH floors
    CALL create_Doors 

ENDDEFINE

DEFINE FloorRequestButton USING floor
    Number: floor
    IsPressed :false
ENDDEFINE


DEFINE Doors 
    Open : false
    OpenTime: 5sec
    SafeToClose : true
    PassengerDetector : false
ENDDEFINE

SET calls to empty list
SET requests to empty list
"SET time to clockTIME
"
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


'sort SEQUENCE EDX week 3'
'compare values array'
SEQUENCE IS_IN USING value AND list     
    FOR every element of list
        IF value is SAME AS element
            THEN RETURN true
        ELSE RETURN false
        ENDIF
    ENDFOR
ENDSEQUENCE
    

'magnitude is the unsigned value of the variable'
SEQUENCE magnitude USING number     
    IF number SMALLER THAN 0
        THEN RETURN number MULTIPLIES -1
    ELSE RETURN number
    ENDIF
ENDSEQUENCE


 EVENT LISTENERS
 
        WHEN a Callbutton IS pressed
            CALL CallElevatorCheck WITH COLLUMN

        WHEN a FloorRequestButton IS pressed
            CALL usersDestination WITH COLLUMN

        WHEN 1 second passes
            CALL timerAdd WITH BUILDING

        WHEN 'elevator is IDLE for 5 mins'
            a  Movement of Elevator of collumn IS false AND timer of Elevator of collumn  is 300 
            CALL goToIdle WITH collumn

        WHEN BUILDING ALARM IS CHANGED
            CALL alarm WITH COLLUMN AND BUILDING


----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


SEQUENCE CallElevatorCheck USING collumn

    CALL checkIfElevatorOnline WITH collumn
    
    CALL pressButton WITH CallButtons of collumn  
    FOR every CallButton of CallButtons of collumn
        IF CallButton IsPressed SAME AS true 
            THEN ADD callButton to calls 
        ENDIF
    ENDFOR

    FOR every callElement of calls 

        FOR every elevator of Online_elevators of collumn

            CAll (magnitude WITH FloorNumber of Elevator) RETURNING magnitude_OF_FloorNumber
            CALL (magnitude WITH button Number) RETURNING magitude_OF_buttonNumber
            CALL (magnitude WITH (FloorNumber of Elevator MINUS callButton Number)) RETURNING distanceToCall
            CALL (magnitude WITH (FloorNumber of Elevator MINUS Elevator DestinationFloor)) RETURNING distanceToDestination

            IF  'IF an elevator's travel takes it through button's floor'
                magnitude_OF_FloorNumber GREATER THAN magitude_OF_buttonNumber AND Elevator Movement SAME_AS button Direction SAME AS down
                OR maagnitude_OF_FloorNumber GREATER THAN magitude_OF_buttonNumber  AND ElevatorMovement SAME AS button Direction SAME AS up
                AND distanceToCall SMALLER THAN distanceToDestination
                    THEN SET SelectedElevator to elevator of Online_elevators of collumn                    
                        go to next callElement 'elevators moveSEQUENCE will make it stop at the called floor'
            ELSE

                CALL findClosestElevator WITH callElement AND collumn
                
                FOR every Elevator of Online_elevators of collumn

                    CALL (magnitude WITH ( FloorNumber of Elevator MINUS Number of callButton)) RETURNING distanceToCall
                    CALL (magnitude WITH (FloorNumber of Elevator MINUS  DestinationFloor of Elevator) RETURNING distanceToDestination

                    CASE 'elevator travelling towards call'
                         FloorNumber of Elevator GREATER THAN Number of callElement AND  Movement of Elevator SAME AS Direction of callElement  SAME AS down
                        OR FloorNumber of Elevator SMALLER THAN Number of callButton  AND Movement of Elevator SAME AS Direction of callElement SAME AS up
                        IF 'IF closest elevator's destination is closer than this call'
                            distanceToCall GREATER THAN distanceToDestination
                            
                            THEN SET DestinationFloor of Elevator to Number of callElement
                                SET SelectedElevator to elevator of Online_elevators of collumn
                        ENDIF
                    
                    CASE Elevator Movement is false
                            SET DestinationFloor of Elevator to Number of callElement 
                            call moveElevator WITH Elevator
                            SET SelectedElevator to elevator of Online_elevators of collumn
                                
                    CASE FloorNumber OF Elevator GREATER THAN Number of callElement  AND Movement of Elevator  IS up 
                        OR FloorNumber of Elevator SMALLER THAN Number ofcallElement  AND Movement of Elevator  IS down
                        go to next Elevator
                            
                    ENDCASE
                ENDFOR
            ENDIF
        ENDFOR        
    ENDFOR
    CALL usersDestination WITH collumn

               

ENDSEQUENCE

SEQUENCE usersDestination USING collumn

    CALL checkIfElevatorOnline WITH collumn


    CALL pressButton WITH FloorRequestButtons
    FOR every  Elevator of Collumn    
        FOR every  FloorRequestButton of Elevator of Collumn 
            IF FloorRequestButton of Elevator of Collumn IsPressed IS true                
                ADD Number of FloorRequestButton of Elevator of Collumn to requests 
                SORT requests ascending
                CASE Movement of Elevator of Collumn IS up
                    SET DestinationFloor of Elevator of Collumn to  last of requests
                CASE Movement of Elevator of Collumn IS down
                    SET DestinationFloor of Elevator of Collumn to first of requests                   
                CASE Movement of Elevator of Collumn IS false

                    CALL (magnitude WITH (FloorNumber of Elevator of Collumn MINUS first of requests)) RETURNING lowest
                    CALL (magnitude WITH (last of requests MINUS FloorNumber of Elevator of Collumn)) RETURNING highest

                    CASE lowest GREATER THAN highest
                        SET DestinationFloor of Elevator of Collumn to first of requests
                    CASE lowest SMALLER THAN highest
                        SET DestinationFloor of Elevator of Collumn to last of requests
                    CASE lowest SAME AS highest
                        SET DestinationFloor of Elevator of Collumn to first of requests
                    ENDCASE
                ENDCASE
            ENDIF
        ENDFOR
        CALL moveElevator USING  Elevator of Collumn 
    ENDFOR
ENDSEQUENCE

SEQUENCE findClosestElevator USING calledTo AND Collumn
    
    FOR every  Elevator of Collumn 
        CALL (magnitude WITH (FloorNumber of Elevator MINUS calledTo) ) RETURNING Distance of ELevator
    ENDFOR
    SORT Online_elevators of collumn
        by ascending distance of ELevator
    SET closestElevator to first elevator of Online_elevators of Collumn 
ENDSEQUENCE

SEQUENCE pressButton USING buttons 
    FOR every button  of buttons
        IF button is pressed
            SET  IsPressed  of button to true
        ENDIF 
    ENDFOR
ENDSEQUENCE

SEQUENCE moveElevator USING Elevator of Collumn 
    
    WHILE FloorNumber of Elevator  IS NOT elevator DestinationFloor AND "(CALL isElevatorFull OF elevator) returning false"

        IF elevator destinationFloor  GREATER THAN FloorNumber of Elevator 
            THEN SET elevator Movement to up
            INCREMENT floorNumber of elevator by +1
            
        ELSE 
            SET elevator Movement to down
            INCREMENT floorNumber of elevator by -1
        ENDIF

        CALL (IS_IN WITH FloorNumber of Elevator of Collumn   AND calls callElement Numbers) RETURNING FloorNumber_IS_IN_calls
        CALL (IS_IN WITH FloorNumber of Elevator of Collumn AND requests) RETURNING FloorNumber_IS_IN_requests

        IF  FloorNumber_IS_IN_calls AND Movement of Elevator of Collumn SAME AS callElement Direction
            OR FloorNumber_IS_IN_requests 
                THEN 
                    CALL DoorsAction USING Elevator of Collumn 
                    SET callButtons (WITH Number SAME AS FloorNumber of Elevator of Collumn) IsPressed  to false
                    SET FloorRequestButton (WITH Number SAME AS FloorNumber of Elevator of Collumn) IsPressed  to false
                    REMOVE element WITH number SAME AS FloorNumber of Elevator of Collumn FROM requests AND calls
        ENDIF
    'catch missed calls'
    CASE calls IS NOT empty
        SET DestinationFloor of Elevator of Collumn to first callElement Number
    CASE requests IS NOT empty
        SET DestinationFloor of Elevator of Collumn to first request
    ENDCASE
    ENDWHILE
        
    IF FloorNumber of Elevator SAME AS destinationFloor
        THEN SET elevator Movement to false
            CALL StartTimer WITH elevator
            CALL DoorsAction WITH Elevator of Collumn 
            SET callButtons WITH Number SAME AS destinationFloor IsPressed  to false
    
    ENDIF
    SET destinationFloor of elevator  to null
ENDSEQUENCE

SEQUENCE doorsAction USING elevator
    SET  open of  Doors of elevator to true
    wait openTime
   
    SET  safeToClose of  Doors of elevator to false
    WHILE safeToClose of  Doors of elevator is false
        CALL checkSafeToClose USING elevator Doors
            IF safeToClose of  Doors of elevator is true
                THEN close elevator Doors
                SET elevator Doors open to false
            ENDIF
    ENDWHILE
    
ENDSEQUENCE

SEQUENCE checkSafeToClose USING doors
    IF PassengerDetector of doors  is false 'not activated'
        SET SafeToClose of doors  to true
ENDSEQUENCE

SEQUENCE timerAdd USING Battery
    FOR every  collumn of Battery
        FOR every Elevator of collumn of Battery
            INCREMENT Timer of elevator of collumn of Battery by +1
        ENDFOR
    ENDFOR

ENDSEQUENCE

SEQUENCE StartTimer USING elevator
    SET  Timer of elevator to 0
ENDSEQUENCE

SEQUENCE goToIdle USING collumn and BuildingSpecs
    SET counter to 0
    FOR every elevator of collumn 
        IF Movement IS false
            THEN   
                INCREMENT counter by +1
        ENDIF
    ENDFOR

    
 "    Call timeCheck of BuildingSpecs RETURNING idleFloor
    IF idleFloor not null THEN
        FOR every elevator of collumn 
            IF Movement IS false
                THEN
                    SET  destinationFloor of elevator of collumn to idleFloor 
                    CALL moveElevator WITH elevator of collumn 
            ENDIF
        ENDFOR
    ELSE       
 "
        SET idleFloor to (floors DIVIDED BY (counter PLUS 1) ROUNDED DOWN)
        SET counter to 1
        FOR every elevator of collumn 
            IF Movement IS false
                THEN
                    SET  destinationFloor of elevator of collumn to (idleFloor MULTIPLIES counter)  
                    INCREMENT counter by +1
                    CALL moveElevator WITH elevator of collumn 
            ENDIF
        ENDFOR
    ENDIF

ENDSEQUENCE

SEQUENCE alarm USING collumn AND BUILDING
    SET collumn Online to NOT BUILDING ALARM 'true to be false and vice versa'
    FOR every elevator of collumn 
        SET Online of elevator of collumn  to  Online of collumn
    ENDFOR
ENDSEQUENCE

SEQUENCE checkIfElevatorOnline USING collumn
    FOR every elevator OF collumn
        IF Online OF elevator OF collumn
            ADD elevator OF collumn to Online_elevators of collumn 
        ENDIF
    ENDFOR
ENDSEQUENCE